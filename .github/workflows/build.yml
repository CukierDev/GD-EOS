name: 🛠️ Builds
on:
    workflow_dispatch:
    push:
        branches:
            - main

env:
  GODOT_BRANCH_FOR_GENERATE_DOCUMENTS: 4.3-stable

jobs:
    build:
        name: ${{ matrix.icon }} ${{ matrix.identifier }} ${{ matrix.target }} (min Godot-${{ matrix.compatibility_minimum }})
        runs-on: ${{ matrix.runner }}
        strategy:
            fail-fast: false
            matrix:
                identifier: [linux-x64, macos-universal, windows-x64, windows-x86, android-arm64, android-x86_64, android-arm32, android-x86_32]
                target: [debug, release]
                compatibility_minimum: [4.2, 4.3]
                include:
                    - identifier: linux-x64
                      icon: 🐧
                      runner: ubuntu-20.04
                      platform: linux
                      arch: x86_64
                      editor_suffix: linux.x86_64
                    - identifier: macos-universal
                      icon: 🍎
                      runner: macos-latest
                      platform: macos
                      arch: universal
                      editor_suffix: macos.universal
                    - identifier: windows-x64
                      icon: 🏁
                      runner: windows-latest
                      platform: windows
                      arch: x86_64
                      editor_suffix: win64.exe
                    - identifier: windows-x86
                      icon: 🏁
                      runner: windows-latest
                      platform: windows
                      arch: x86_32
                      editor_suffix:
                    - identifier: android-arm64
                      icon: 🤖
                      runner: ubuntu-20.04
                      platform: android
                      arch: arm64
                      editor_suffix: linux.x86_64
                    - identifier: android-x86_64
                      icon: 🤖
                      runner: ubuntu-20.04
                      platform: android
                      arch: x86_64
                      editor_suffix: linux.x86_64
                    - identifier: android-arm32
                      icon: 🤖
                      runner: ubuntu-20.04
                      platform: android
                      arch: arm32
                      editor_suffix: linux.x86_64
                    - identifier: android-x86_32
                      icon: 🤖
                      runner: ubuntu-20.04
                      platform: android
                      arch: x86_32
                      editor_suffix: linux.x86_64

        steps:
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.x"

            - name: Set up SCons
              shell: bash
              run: |
                  python -c "import sys; print(sys.version)"
                  python -m pip install scons
                  scons --version

            - name: Checkout project
              uses: actions/checkout@v4
              with:
                  submodules: false

            - name: Setup version
              if: ${{ matrix.platform != 'windows' }}
              run: |
                python build_version.py >> $GITHUB_ENV

            - name: Setup version (Windows)
              if: ${{ matrix.platform == 'windows' }}
              run: |
                python build_version.py >> $env:GITHUB_ENV

            - name: Checkout godot-cpp (${{ matrix.compatibility_minimum }})
              uses: actions/checkout@v4
              with:
                  repository: godotengine/godot-cpp
                  path: godot-cpp
                  ref: godot-${{ matrix.compatibility_minimum }}-stable
                  submodules: recursive

            - name: Checkout private EOS SDK repo
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.PRIVATE_EOS_SDK_TOKEN }}
                  repository: Daylily-Zeleen/eos-sdk
                  path: thirdparty/eos-sdk
                  ref: main

            - name: (Windows) Install mingw64
              if: ${{ matrix.platform == 'windows' }}
              # change to egor-tensin/setup-mingw@v2 once pr #16 is merged
              uses: e-t-l/setup-mingw@patch-1

            - name: (Linux) Install dependencies
              if: ${{ matrix.platform == 'linux' }}
              run: |
                  sudo apt-get update -qq
                  sudo apt-get install -qqq build-essential pkg-config

            - name: (Linux32) Install dependencies
              if: ${{ matrix.platform == 'linux' && matrix.arch == 'x86_32' }}
              run: |
                  sudo apt-get install gcc-multilib g++-multilib

            - name: (Android) Install dependencies
              if: ${{ matrix.platform == 'android' }}
              uses: nttld/setup-ndk@v1
              with:
                ndk-version: r23c
                link-to-sdk: true

            - name: Setup build cache
              uses: actions/cache@v4
              with:
                  path: ${{ github.workspace }}/.scons-cache/
                  key: ${{ matrix.identifier }}-${{ matrix.target }}
                  #   key: ${{ matrix.identifier }}-${{ github.ref }}
                  restore-keys: |
                      #   ${{ matrix.identifier }}-${{ matrix.target }}-${{ github.ref }}
                        ${{ matrix.identifier }}-${{ matrix.target }}
              continue-on-error: true

            - name: Compile extension
              shell: sh
              env:
                  SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
                  SCONS_CACHE_LIMIT: 7168
              run: |
                  scons target='template_${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}'

            - name: (4.3 && Debug && Windows) Download Godot and generate documents
              if: ${{ matrix.compatibility_minimum == 4.3 && matrix.editor_suffix != '' && matrix.platform == 'windows' }}
              shell: sh
              run: |
                @powershell -NoProfile -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
                choco install wget
                wget https://github.com/godotengine/godot-builds/releases/download/${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}/Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }}.zip -O Godot.zip
                unzip -a Godot.zip
                chmod +x Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }}
                $(pwd)/Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }} --path demo --doctool .. --gdextension-docs

            - name: (4.3 && Debug && Other) Download Godot
              if: ${{ matrix.compatibility_minimum == 4.3 && matrix.editor_suffix != '' && matrix.platform != 'macos' && matrix.platform != 'windows' }}
              run: |
                wget "https://github.com/godotengine/godot-builds/releases/download/${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}/Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }}.zip" -O Godot.zip
                unzip -a Godot.zip
                chmod +x Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }}
                echo "GODOT=$(pwd)/Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }}" >> $GITHUB_ENV

            # TODO: 我没 macos 别找我做
            #- name: (Macos) Download Godot for generating documents
            #  if: ${{ matrix.compatibility_minimum == 4.3 && matrix.editor_suffix != '' && matrix.platform == 'macos' }}
            #  run: |
            #    wget "https://github.com/godotengine/godot-builds/releases/download/${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}/Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }}.zip" -O Godot.zip
            #    unzip -a Godot.zip
            #    chmod +x Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }}
            #    echo "GODOT=$(pwd)/Godot_v${GODOT_BRANCH_FOR_GENERATE_DOCUMENTS}_${{ matrix.editor_suffix }}" >> $GITHUB_ENV

            - name: (4.3 && Debug && other) Generate documents
              if: ${{ matrix.compatibility_minimum == 4.3 && matrix.editor_suffix != '' && matrix.platform != 'macos' && matrix.platform != 'windows' }}
              run: |
                $GODOT --path demo --doctool .. --gdextension-docs

            - name: (4.3 && Debug) Compile extension with documents
              if: ${{ matrix.compatibility_minimum == 4.3 && matrix.editor_suffix != ''  && matrix.platform != 'macos'}}
              shell: sh
              env:
                  SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
                  SCONS_CACHE_LIMIT: 7168
              run: |
                  scons target='template_${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}'

            - name: Create artifact folder ${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.compatibility_minimum }}
              shell: sh
              run: |
                  mkdir -p '${{ github.workspace }}/${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.compatibility_minimum }}/artifact/${{ github.event.repository.name }}/'

            - name: Create artifact folder for all in one.
              shell: sh
              run: |
                  mkdir -p '${{ github.workspace }}/artifact/${{ github.event.repository.name }}/'

            - name: Copy addons folder to artifact folder ${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.compatibility_minimum }}
              shell: sh
              run: |
                  cp -n -r '${{ github.workspace }}/demo/addons' '${{ github.workspace }}/${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.compatibility_minimum }}/artifact/${{ github.event.repository.name }}/'

            - name: Copy addons folder to artifact folder
              shell: sh
              run: |
                  cp -n -r '${{ github.workspace }}/demo/addons' '${{ github.workspace }}/artifact/${{ github.event.repository.name }}/'

            - name: Upload artifact ${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.compatibility_minimum }}
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ github.event.repository.name }}-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.compatibility_minimum }}-${{ env.BUILD_VERSION }}-${{ github.sha }}
                  path: |
                      ${{ github.workspace }}/${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.compatibility_minimum }}/artifact/
                  retention-days: 14

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ github.event.repository.name }}-godot-${{ matrix.compatibility_minimum }}-all-platforms-${{ env.BUILD_VERSION }}-${{ github.sha }}
                  path: |
                      ${{ github.workspace }}/artifact/
                  retention-days: 14
                  if-no-files-found: error
